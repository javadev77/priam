<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
"
>
<!--
    <import resource="classpath:/config/job-database.xml"/>
        <context:component-scan base-package="fr.sacem.*"/>
-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
           <property name="searchSystemEnvironment" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
     <property name="location" value="classpath:config/application-${spring.profiles.active}.properties"/>
    </bean>
    <job id="archiveFlatFileReaderJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="archiveFlatFileReaderStep">
            <tasklet>
                <chunk
                        reader="readerPriamZip"
                        writer="writerPriam"
                        processor="ligneProgrammeItemProcessor"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>
        <listeners merge="true">
            <listener ref="listenerCompletition"/>
        </listeners>
    </job>
    <bean id="listenerCompletition" class="fr.sacem.listener.importPenef.JobCompletionNotificationLigneProgrammeImportPenefListener">
        <property name="fichierService" ref="fichierService"/>
    </bean>
    <bean id="readerPriamZip"
          class="fr.sacem.service.importPenef.ZipMultiResourceCPItemReader" scope="step">
        <property name="delegate" ref="flatFileItemReader"/>
        <property name="strict" value="false"/>
        <property name="utilFile" ref="utilFile"/>
    </bean>



    <bean id="writerPriam" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO PRIAM_LIGNE_PROGRAMME_CP (
                            id_fichier,
                            cdeCisac,
                            cdeFamilTypUtil,
                            numProg,
                            cdeUtil,
                            cdeTypUtil,
                            cdeGreDif,
                            cdeModDif,
                            cdeTypIde12,
                            ide12,
                            durDif,
                            nbrDif,
                            mt,
                            ctna,
                            paramCoefHor,
                            durDifCtna,
                            cdeLng,
                            indDoubSsTit,
                            tax,
                            typMt,
                            cdeGreIde12Cmplx,
                            cdeGreIde12,
                            titreOriCmplx,
                            titreAltPppalCmplx,
                            titreOriOeuvPereCmplx,
                            titreAltOeuvPereCmplx,
                            titreOeuvre,
                            cdePaysOriIso4NCmplx,
                            realisateurCmplx,
                            roleParticipant1,
                            nomParticipant1,
                            cdeTypUtilOri,
                            cdeFamilTypUtilOri,
                            libelleUtilisateur
                        )
                        VALUES (
                            :idFichier,
                            :cdeCisac,
                            :cdeFamilTypUtil,
                            :numProg,
                            :cdeUtil,
                            :cdeTypUtil,
                            :cdeGreDif,
                            :cdeModDif,
                            :cdeTypIde12,
                            :ide12,
                            :durDif,
                            :nbrDif,
                            :mt,
                            :ctna,
                            :paramCoefHor,
                            :durDifCtna,
                            :cdeLng,
                            :indDoubSsTit,
                            :tax,
                            :typMt,
                            :cdeGreIde12Cmplx,
                            :cdeGreIde12,
                            :titreOriCmplx,
                            :titreAltPppalCmplx,
                            :titreOriOeuvPereCmplx,
                            :titreAltOeuvPereCmplx,
                            :titreOeuvre,
                            :cdePaysOriIso4NCmplx,
                            :realisateurCmplx,
                            :roleParticipant1,
                            :nomParticipant1,
                            :cdeTypUtilOri,
                            :cdeFamilTypUtilOri,
                            (SELECT concat(libUtil.CDEUTIL, case when libUtil.LIBABRGUTIL is null then '' else ' - ' end, coalesce(libUtil.LIBABRGUTIL, ''))
                             FROM SAREFTJ_LIBUTIL libUtil
                              WHERE libUtil.CDEUTIL = :cdeUtil )
                        )
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>
    <bean id="ligneProgrammeItemProcessor" class="fr.sacem.service.importPenef.LigneProgrammeCPItemProcessor"/>

    <bean id="flatFileItemReader"
          class="fr.sacem.util.mapper.importPenef.PriamFileItemReader">
        <property name="lineMapper">
            <bean class="fr.sacem.util.mapper.importPenef.PriamLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="
                            cdeCisac,
                            cdeFamilTypUtil,
                            numProg,
                            cdeUtil,
                            cdeTypUtil,
                            cdeGreDif,
                            cdeModDif,
                            cdeTypIde12,
                            ide12,
                            durDif,
                            nbrDif,
                            mt,
                            ctna,
                            paramCoefHor,
                            durDifCtna,
                            cdeLng,
                            indDoubSsTit,
                            tax,
                            typMt,
                            cdeGreIde12Cmplx,
                            cdeGreIde12,
                            titreOriCmplx,
                            titreAltPppalCmplx,
                            titreOriOeuvPereCmplx,
                            titreAltOeuvPereCmplx,
                            titreOeuvre,
                            cdePaysOriIso4NCmplx,
                            realisateurCmplx,
                            roleParticipant1,
                            nomParticipant1,
                            cdeTypUtilOri,
                            cdeFamilTypUtilOri"/>
                        <property name="delimiter" value=";"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType" value="fr.sacem.domain.LigneProgramme"/>
                        <property name="customEditors">
                            <map>
                                <entry key="java.time.LocalDate">
                                    <bean class="fr.sacem.util.LocalDatePropertyEditor">
                                    </bean>
                                </entry>
                            </map>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository"/>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>

    <bean id="fichierService" class="fr.sacem.service.importPenef.FichierServiceImpl">
        <constructor-arg ref="fichierRepository"/>
    </bean>
    <bean id="fichierRepository" class="fr.sacem.dao.FichierRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableFichier" value="${nom.table.fichier}"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
        <property name="nomTableLigneProgrammeLog" value="${nom.table.fichierlog}"/>
        <property name="typeFichier" value="${type.fichier}"/>
    </bean>
    <bean id="utilFile" class="fr.sacem.util.UtilFile">
        <property name="fichierService" ref="fichierService"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


</beans>