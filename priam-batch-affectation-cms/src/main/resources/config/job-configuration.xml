<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

    <!--<jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:config/sql/initial-query.sql" />
    </jdbc:initialize-database>-->

    <import resource="job-desaffectation-conf.xml"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="searchSystemEnvironment" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="location" value="classpath:config/application-${spring.profiles.active}.properties"/>
    </bean>



    <job id="jobEligibiliteOctav" xmlns="http://www.springframework.org/schema/batch">
        <step id="chargerCatalogueOctav" next="eligibiliteStep">
            <tasklet>
                <chunk
                        reader="catalogueOctavReader"
                        writer="catalogueOctavWriter"
                        processor="catalogueOctavProcessor"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>

       <step id="eligibiliteStep" next="dedoublonnageStep" >
            <tasklet>
                <chunk
                        reader="eligibiliteReader"
                        writer="eligibiliteWriter"
                        processor="ligneCMSProcessor"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>

        <step id="dedoublonnageStep" next="calculPointsStep">
            <tasklet>
                <chunk
                        reader="readerDedoublonage"
                        writer="writerDedoublonnage"
                        processor="ligneCMSProcessor"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
            <listeners merge="true">
                 <listener ref="listnerDeleteAfterDedoublonnage"/>
            </listeners>
        </step>


        <step id="calculPointsStep">
            <tasklet>
                <chunk
                        reader="readerCalculPoints"
                        writer="writerCalculPoints"
                        processor="calculPointsProcessor"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>

            <listeners>
                <listener ref="calculPointsStepListener"/>
            </listeners>

        </step>


        <listeners merge="true">
            <listener ref="listenerCompletition"/>
        </listeners>

    </job>


    <bean id="listenerCompletition" class="fr.sacem.priam.batch.affectation.listener.JobCompletionNotificationAffectationCMSListener">
        <property name="fichierBatchService" ref="fichierBatchService"/>
    </bean>

    <bean id="listnerDeleteAfterDedoublonnage" class="fr.sacem.priam.batch.affectation.listener.ListnerDeleteAfterDedoublonnage"></bean>

    <bean id="calculPointsProcessor" class="fr.sacem.priam.batch.affectation.processor.CalculPointsProcessor"></bean>

    <bean id="calculPointsStepListener" class="fr.sacem.priam.batch.affectation.listener.CalculPointsStepListener"></bean>

    <!-- Debut : Elements essentielle pour le step de dedoublonnage -->


    <bean id="queryProvider" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="databaseType" value="MySQL" />
        <property name="selectClause" value="select l.* "/>
        <property name="fromClause" value="FROM PRIAM_LIGNE_PROGRAMME_CMS l
                                            INNER JOIN PRIAM_FICHIER f ON l.ID_FICHIER=f.ID
                                            INNER JOIN PRIAM_PROGRAMME p ON p.NUMPROG=f.NUMPROG"/>
        <property name="whereClause" value="WHERE p.NUMPROG='#{jobParameters[numProg]}'
                                              AND p.STATUT_ELIGIBILITE = 'EN_ATTENTE_ELIGIBILITE'
                                              AND l.ide12 NOT IN (
                                                  SELECT cat.IDE12
                                                  FROM PRIAM_CATALOGUE_OCTAV cat
                                                  WHERE cat.IDE12 IS NOT NULL
                                                  GROUP BY cat.IDE12
                                              ) "/>

        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="ide12"/>
    </bean>

    <bean id="readerPriamFromTable"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="queryProvider"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="ligneProgrammeRowMapper"/>

    </bean>

    <bean id="jobParametersExtractor" class="org.springframework.batch.core.step.job.DefaultJobParametersExtractor">
        <property name="keys" value="numProg" />
    </bean>
   <!---->

    <bean id="ligneProgrammeRowMapper" class="fr.sacem.util.mapper.importPenef.PriamLigneProgrammeCMSSQLMapper"/>

    <bean id="rowMapperPoints" class="fr.sacem.priam.batch.affectation.mapper.PointsRowMapper"/>

    <bean id="catalogueOctavWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO PRIAM_CATALOGUE_OCTAV (
                            TYPE_CMS,
                            IDE12,
                            TITRE,
                            ROLE,
                            PARTICIPANT
                        )
                        VALUES (
                            :typeCMS,
                            :ide12,
                            :titre,
                            :role,
                            :participant
                        )
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="eligibiliteWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                   DELETE FROM PRIAM_LIGNE_PROGRAMME_CMS WHERE id = :id
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>



   <bean id="writerDedoublonnage" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                   UPDATE PRIAM_LIGNE_PROGRAMME_CMS l2
                    INNER JOIN PRIAM_FICHIER f2 on f2.ID=l2.ID_FICHIER
                    SET mt = :mt
                    WHERE ide12 = :ide12 AND cdeFamilTypUtilOri = :cdeFamilTypUtilOri
                          AND l2.id= :id
                      AND f2.NUMPROG = '#{jobParameters[numProg]}'
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="catalogueOctavReader"
          class="fr.sacem.priam.batch.affectation.reader.CatalogueOctavZipMultiResourceItemReader" scope="step">
        <property name="delegate" ref="flatFileItemReader"/>
        <property name="strict" value="false"/>
    </bean>


    <bean id="eligibiliteReader"
            class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="queryProvider"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="ligneProgrammeRowMapper"/>

    </bean>

    <bean id="catalogueOctavProcessor" class="fr.sacem.priam.batch.affectation.processor.CatalogueOctavProcessor"/>
    <bean id="ligneCMSProcessor" class="fr.sacem.priam.batch.affectation.processor.LigneCMSProcessor"/>

    <bean id="flatFileItemReader"
          class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names"
                                  value="
                            typeCMS,
                            ide12,
                            titre,
                            participant,
                            role"
                           />
                        <property name="delimiter" value=";"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType" value="fr.sacem.priam.batch.affectation.domain.CatalogueOctavItem"/>
                        <property name="customEditors">
                            <map>
                                <entry key="java.time.LocalDate">
                                    <bean class="fr.sacem.util.LocalDatePropertyEditor">
                                    </bean>
                                </entry>
                                <entry key="java.lang.Double">
                                    <bean class="fr.sacem.util.DoublePropertyEditor">
                                    </bean>
                                </entry>
                            </map>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="readerDedoublonage"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="queryProviderStep3"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="ligneProgrammeRowMapper"/>

    </bean>

    <bean id="queryProviderStep3" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="select l.id,
                            l.id_fichier,
                            l.cdeCisac,
                            l.cdeFamilTypUtil,
                            l.numProg,
                            l.cdeUtil,
                            l.cdeTypUtil,
                           l.cdeGreDif,
                           l.cdeModDif,
                           l.cdeTypIde12,
                           l.ide12,
                           l.durDif,
                           l.nbrDif,
                           sum(l.mt) mt,
                           l.ctna,
                           l.paramCoefHor,
                           l.durDifCtna,
                           l.cdeLng,
                           l.indDoubSsTit,
                           l.tax,
                           l.typMt,
                           l.cdeGreIde12Cmplx,
                           l.cdeGreIde12,
                           l.titreOriCmplx,
                           l.titreAltPppalCmplx,
                           l.titreOriOeuvPereCmplx,
                           l.titreAltOeuvPereCmplx,
                           l.titreOeuvre,
                           l.cdePaysOriIso4NCmplx,
                           l.realisateurCmplx,
                           l.roleParticipant1,
                           l.nomParticipant1,
                           l.cdeTypUtilOri,
                           l.cdeFamilTypUtilOri,
                           l.libelleUtilisateur,
                           l.utilisateur,
                           l.date_insertion,
                           l.ajout,
                           l.selection"/>
        <property name="fromClause" value="from PRIAM_LIGNE_PROGRAMME_CMS l
                                            INNER JOIN PRIAM_FICHIER f ON l.ID_FICHIER=f.ID
                                            INNER JOIN PRIAM_PROGRAMME p ON p.NUMPROG=f.NUMPROG"/>
        <property name="whereClause" value="WHERE p.NUMPROG='#{jobParameters[numProg]}' AND p.STATUT_ELIGIBILITE = 'EN_ATTENTE_ELIGIBILITE' "/>
        <property name="groupClause" value="group by l.ide12, l.cdeFamilTypUtilOri "/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="ide12"/>
    </bean>



    <bean id="readerCalculPoints"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="queryProviderStep4"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="rowMapperPoints"/>

    </bean>

   <!-- <bean id="queryProviderStep4" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT  * FROM (select l.ide12 as ide12,  min(l.mt) as mt "/>
        <property name="fromClause" value="from PRIAM_LIGNE_PROGRAMME_CMS l
                                            INNER JOIN PRIAM_FICHIER f ON l.ID_FICHIER=f.ID
                                            INNER JOIN PRIAM_PROGRAMME p ON p.NUMPROG=f.NUMPROG
                                            INNER JOIN PRIAM_LIGNE_PROGRAMME_CMS l2 on l.ide12=l2.ide12
                                                AND l.cdeFamilTypUtilOri &lt;&gt; l2.cdeFamilTypUtilOri"/>
        <property name="whereClause" value="WHERE p.NUMPROG='#{jobParameters[numProg]}' AND p.STATUT_ELIGIBILITE = 'EN_ATTENTE_ELIGIBILITE') temp  WHERE temp.ide12 IS NOT NULL "/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="ide12"/>
    </bean>-->

    <bean id="queryProviderStep4" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT l.id as id, l.ide12 as ide12,  l.mt as mt "/>
        <property name="fromClause" value="from PRIAM_LIGNE_PROGRAMME_CMS l
                                            INNER JOIN PRIAM_FICHIER f ON l.ID_FICHIER=f.ID
                                            INNER JOIN PRIAM_PROGRAMME p ON p.NUMPROG=f.NUMPROG "/>
        <property name="whereClause" value="WHERE p.NUMPROG='#{jobParameters[numProg]}'
                                            AND p.STATUT_ELIGIBILITE = 'EN_ATTENTE_ELIGIBILITE'
                                            AND l.mt &lt; (
                                                SELECT MAX(l2.mt)
                                                FROM PRIAM_LIGNE_PROGRAMME_CMS l2
                                                INNER JOIN PRIAM_FICHIER f2 ON l2.ID_FICHIER=f2.ID
                                                WHERE l.ide12=l2.ide12  AND l.cdeFamilTypUtilOri &lt;&gt; l2.cdeFamilTypUtilOri
                                                AND f2.NUMPROG='#{jobParameters[numProg]}'
                                            )"/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="ide12"/>
    </bean>



    <bean id="writerCalculPoints" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                   DELETE FROM PRIAM_LIGNE_PROGRAMME_CMS
                   WHERE id=:id

                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository" p:taskExecutor-ref="taskExecutor"  />


   <bean id="taskExecutor"
        class="org.springframework.core.task.SimpleAsyncTaskExecutor" >
    </bean>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>

    <bean id="fichierBatchService" class="fr.sacem.service.importPenef.FichierBatchServiceImpl">
        <constructor-arg ref="fichierRepository"/>
    </bean>

    <bean id="fichierRepository" class="fr.sacem.dao.FichierRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableFichier" value="${nom.table.fichier}"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
        <property name="nomTableLigneProgrammeLog" value="${nom.table.fichierlog}"/>
        <property name="typeFichier" value="${type.fichier}"/>
    </bean>


    <bean id="ligneProgrammeBatchDao" class="fr.sacem.dao.LigneProgrammeBatchDao">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
    </bean>

    <bean id="programmeBatchDao" class="fr.sacem.dao.ProgrammeBatchDao">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
    </bean>

    <bean id="traitementCmsDao" class="fr.sacem.dao.TraitementCmsDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="utilFile" class="fr.sacem.util.UtilFile">
        <property name="fichierBatchService" ref="fichierBatchService"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>