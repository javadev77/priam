<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <job id="jobFelixRepart" xmlns="http://www.springframework.org/schema/batch">

        <decision id="decision" decider="decider">
            <next on="REPART_CP_OEUVRE" to="prepareFelixDataCP" />
            <next on="REPART_CMS_OEUVRE" to="prepareFelixDataCMS" />
            <next on="REPART_FV_OEUVRE" to="stepOeuvreCopyTablePreprepFV" />
            <next on="REPART_FV_AYANT_DROIT" to="stepADOeuvreCopyTablePreprepFV" />
            <next on="REPART_FV_OEUVRE_AD" to="stepADOeuvreCopyTablePreprepFV" />
        </decision>


        <step id="prepareFelixDataCP" next="generateFelixData">

            <tasklet>
                <chunk
                        reader="readLigneProgramme"
                        writer="writerToPreprep"
                        commit-interval="1000">
                </chunk>
            </tasklet>

        </step>

        <step id="prepareFelixDataCMS" next="generateFelixData">

            <tasklet>
                <chunk
                    reader="readLigneProgrammeCMS"
                    writer="writerToPreprep"
                    commit-interval="1000">
                </chunk>
            </tasklet>

        </step>

        <step id="generateFelixData" >
            <tasklet>
                <chunk
                        reader="readPreprep"
                        writer="csvFileWriter"
                        processor="generateFelixDataProcessor"
                        commit-interval="1">
                </chunk>
            </tasklet>

            <listeners>
                <listener ref="generateFelixFileStepListener"/>
            </listeners>
        </step>

        <step id="stepOeuvreCopyTablePreprepFV" next="stepGeneration">
            <tasklet>
                <chunk
                    reader="typeRepartOeuvreReader"
                    processor="typeRepartProcessor"
                    writer="lignePreprepFVWriter"
                    commit-interval="100">
                </chunk>
            </tasklet>
        </step>
        <step id="stepADOeuvreCopyTablePreprepFV" next="stepGeneration">
            <tasklet>
                <chunk
                    reader="typeRepartOeuvreADReader"
                    processor="typeRepartProcessor"
                    writer="lignePreprepFVWriter"
                    commit-interval="100">
                </chunk>
            </tasklet>
        </step>


        <step id="stepGeneration">
            <tasklet>
                <chunk
                    reader="lignePreprepFVReader"
                    writer="repartitionFVFileWriter"
                    processor="lignePreprepFVProcessor"
                    commit-interval="1">
                </chunk>
            </tasklet>
        </step>

        <listeners>
            <listener ref="jobCompletion"/>
        </listeners>

    </job>

    <bean id="jobCompletion" class="fr.sacem.priam.batch.felix.listener.JobCompletionFelixRepartListener" scope="prototype"/>
    <bean id="generateFelixFileStepListener" class="fr.sacem.priam.batch.felix.listener.GenerateFelixFileStepListener"/>
    <bean id="decider" class="fr.sacem.priam.batch.felix.decision.FlowDecision"/>

    <bean id="readPreprep"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="queryProviderStep3"/>
        <property name="pageSize" value="1000"/>
        <property name="rowMapper" ref="ligneProgrammeRowMapper"/>

    </bean>

    <bean id="ligneProgrammeRowMapper" class="fr.sacem.priam.batch.felix.mapper.FelixDataRowMapper"/>

    <bean id="lignePreprepMapper" class="fr.sacem.priam.batch.felix.mapper.LignePreprepRowMapper"/>

    <bean id="queryProviderStep3" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="select * "/>
        <property name="fromClause" value="from PRIAM_LIGNE_PREPREP "/>
        <property name="whereClause" value="WHERE numProg='#{jobParameters[numProg]}' "/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKeys" >
            <map>
                <entry key="cdeCisac" value="ASCENDING"/>
                <entry key="cdeTer" value="ASCENDING"/>
                <entry key="rionEffet" value="ASCENDING"/>
                <entry key="cdeFamilTypUtil" value="ASCENDING"/>
                <entry key="cdeTypUtil" value="ASCENDING"/>
                <entry key="cdeUtil" value="ASCENDING"/>
                <entry key="cdeModFac" value="ASCENDING"/>
                <entry key="cdeTypProg" value="ASCENDING"/>
                <entry key="cdeCompl" value="ASCENDING"/>
                <entry key="datDbtProg" value="ASCENDING"/>
                <entry key="datFinProg" value="ASCENDING"/>
                <entry key="keyLigPenel" value="ASCENDING"/>
            </map>
        </property>
    </bean>



    <bean id="readLigneProgramme"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="qp4"/>
        <property name="pageSize" value="100"/>
        <property name="rowMapper" ref="lignePreprepMapper"/>

    </bean>


    <bean id="qp4" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="select
                                                ligneProgramme.id as id_cp,
                                                ligneProgramme.cdeCisac as cdeCisac,
                                                prog.CDE_TER as cdeTer,
                                                prog.RION_THEORIQUE as rionEffet,
                                                prog.CDEFAMILTYPUTIL as cdeFamilTypUtil,
                                                prog.NUMPROG as numProg,
                                                ligneProgramme.cdeUtil as cdeUtil,
                                                'FORFAI' as cdeModFac,
                                                prog.CDETYPUTIL as cdeTypUtil,
                                                'PRINC' as cdeTypProg,
                                                'SANS' as cdeCompl,
                                                prog.NOM as libProg,
                                                prog.DATE_DBT_PRG as datDbtProg,
                                                prog.DATE_FIN_PRG as datFinProg,
                                                ligneProgramme.cdeGreDif as cdeGreDif,
                                                ligneProgramme.cdeModDif as cdeModDif,
                                                ligneProgramme.cdeTypIde12 as cdeTypIde12,
                                                ligneProgramme.ide12 as ide12,
                                                sum(ligneProgramme.durDif) as durDif,
                                                (CASE WHEN prog.CDETYPUTIL = 'CPRIVSONRD' THEN 1 ELSE sum(ligneProgramme.nbrDif) END) as nbrDif,
                                                0.0 as mt,
                                                ligneProgramme.ctna as ctna,
                                                ligneProgramme.paramCoefHor as paramCoefHor,
                                                ligneProgramme.durDifCtna as durDifCtna,
                                                ligneProgramme.cdeLng as cdeLng,
                                                ligneProgramme.indDoubSsTit as indDoubSsTit,
                                                ligneProgramme.tax as tax"/>
        <property name="fromClause" value="from PRIAM_LIGNE_PROGRAMME_CP ligneProgramme
                                            INNER JOIN PRIAM_FICHIER f ON ligneProgramme.ID_FICHIER=f.ID
                                            INNER JOIN PRIAM_PROGRAMME prog ON prog.NUMPROG=f.NUMPROG"/>
        <property name="whereClause" value="WHERE prog.NUMPROG='#{jobParameters[numProg]}' AND ligneProgramme.selection=1 AND ligneProgramme.idOeuvreManuel IS NULL "/>
        <property name="groupClause" value="GROUP BY ligneProgramme.ide12, ligneProgramme.cdeUtil "/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKeys" >
            <map>
                <entry key="id_cp" value="ASCENDING"/>

            </map>
        </property>

    </bean>


    <bean id="readLigneProgrammeCMS"
        class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="qpCMS"/>
        <property name="pageSize" value="100"/>
        <property name="rowMapper" ref="lignePreprepMapper"/>

    </bean>


    <bean id="qpCMS" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="select
                                                ligneProgramme.id,
                                                '058' as cdeCisac,
                                                prog.CDE_TER as cdeTer,
                                                prog.RION_THEORIQUE as rionEffet,
                                                prog.CDEFAMILTYPUTIL as cdeFamilTypUtil,
                                                prog.NUMPROG as numProg,
                                                'XXX' as cdeUtil,
                                                'FORFAI' as cdeModFac,
                                                prog.CDETYPUTIL as cdeTypUtil,
                                                'PRINC' as cdeTypProg,
                                                'SANS' as cdeCompl,
                                                prog.NOM as libProg,
                                                prog.DATE_DBT_PRG as datDbtProg,
                                                prog.DATE_FIN_PRG as datFinProg,
                                                ligneProgramme.cdeGreDif as cdeGreDif,
                                                ligneProgramme.cdeModDif as cdeModDif,
                                                'COCV' as cdeTypIde12,
                                                ligneProgramme.ide12 as ide12,
                                                0 as durDif,
                                                (CASE WHEN prog.CDETYPUTIL = 'SONOFRA' THEN 1 ELSE ligneProgramme.nbrDif END) as nbrDif,
                                                (CASE WHEN prog.CDETYPUTIL = 'SONOFRA' THEN ligneProgramme.mt ELSE 0.0 END) as mt,
                                                ligneProgramme.ctna as ctna,
                                                ligneProgramme.paramCoefHor as paramCoefHor,
                                                ligneProgramme.durDifCtna as durDifCtna,
                                                ligneProgramme.cdeLng as cdeLng,
                                                ligneProgramme.indDoubSsTit as indDoubSsTit,
                                                ligneProgramme.tax as tax"/>
        <property name="fromClause" value="from PRIAM_LIGNE_PROGRAMME_CMS ligneProgramme
                                            INNER JOIN PRIAM_FICHIER f ON ligneProgramme.ID_FICHIER=f.ID
                                            INNER JOIN PRIAM_PROGRAMME prog ON prog.NUMPROG=f.NUMPROG"/>
        <property name="whereClause" value="WHERE prog.NUMPROG='#{jobParameters[numProg]}' AND ligneProgramme.selection=1 AND ligneProgramme.idOeuvreManuel IS NULL "/>
        <!--<property name="groupClause" value="GROUP BY ligneProgramme.ide12, ligneProgramme.cdeUtil "/>-->
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKeys" >
            <map>
                <entry key="ligneProgramme.id" value="ASCENDING"/>

            </map>
       </property>
    </bean>

    <bean id="writerToPreprep" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                  INSERT INTO PRIAM_LIGNE_PREPREP (cdeCisac, cdeTer, rionEffet, cdeFamilTypUtil, cdeModFac, numProg, cdeUtil,
                                          cdeTypUtil, cdeTypProg, cdeCompl, libProg, compLibProg, datDbtProg, datFinProg, hrDbt, hrFin, cdeGreDif,
                                          cdeModDif, cdeTypIde12, ide12, datDif, hrDif, durDif, nbrDif, mt, ctna, paramCoefHor, durDifCtna, cdeLng, indDoubSsTit, tax)
                           VALUES (:cdeCisac, :cdeTer, :rionEffet, :cdeFamilTypUtil, :cdeModFac, :numProg, :cdeUtil, :cdeTypUtil, :cdeTypProg,
                            :cdeCompl, :libProg, :compLibProg, :datDbtProg, :datFinProg, :hrDbt, :hrFin, :cdeGreDif, :cdeModDif, :cdeTypIde12,
                            :ide12, :datDif, :hrDif, :durDif, :nbrDif, :mt, :ctna, :paramCoefHor, :durDifCtna, :cdeLng, :indDoubSsTit, :tax)
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>




    <bean id="typeRepartOeuvreReader"
        class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="ligneProgrammeFVQuery"/>
        <property name="pageSize" value="100"/>
        <property name="rowMapper" ref="lignePreprepFVRowMapper"/>
    </bean>

    <bean id="ligneProgrammeFVQuery" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="databaseType" value="MySQL" />
        <property name="selectClause" value="SELECT PP.CDE_TER AS cdeTer, PP.RION_THEORIQUE as rionEffet, PP.cdeFamilTypUtil as cdeFamilTypUtil,
                                             PP.NUMPROG AS numProg, LPFV.id, PP.cdeTypUtil, PP.NOM AS libProg,
                                             PP.DATE_DBT_PRG AS datDbtProg, PP.DATE_FIN_PRG AS datFinProg,
                                             LPFV.ide12, LPFV.cdeTypIde12, LPFV.datsitu, LPFV.datconslt,LPFV.durDif, LPFV.nbrDif,
                                             LPFV.typMt, LPFV.mt"/>
        <property name="fromClause" value="FROM  PRIAM_LIGNE_PROGRAMME_FV LPFV
                                            INNER JOIN PRIAM_FICHIER PF ON LPFV.ID_FICHIER = PF.ID
                                            INNER JOIN PRIAM_PROGRAMME PP ON PF.NUMPROG = PP.NUMPROG"/>
        <property name="whereClause" value="WHERE PP.NUMPROG='#{jobParameters[numProg]}' AND PP.STATUT_PROG_CODE = 'VALIDE' "/>
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="LPFV.id"/>
    </bean>

    <bean id="lignePreprepFVRowMapper" class="fr.sacem.priam.batch.felix.mapper.LignePreprepFVRowMapper"/>

    <bean id="lignePreprepFVWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO PRIAM_LIGNE_PREPREP_FV (
                            typRepart,
                            cdeCisac,
                            cdeTer,
                            rionEffet,
                            cdeFamilTypUtil,
                            numProg,
                            cdeUtil,
                            cdeTypUtil,
                            cdeModFac,
                            cdeTypProg,
                            cdeCompl,
                            libProg,
                            datDbtProg,
                            datFinProg,
                            ide12,
                            cdeTypIde12,
                            datSitu,
                            datConslt,
                            durDif,
                            nbrDif,
                            typMt,
                            mt,
                            cdeTypDrtSacem,
                            coadPayer,
                            idSteAd,
                            rolAd,
                            cleAd,
                            cdeTypProtec,
                            coadOriEdtr,
                            idSteOriEdtr,
                            numPers,
                            numCatal,
                            points
                        )
                        VALUES (
                            :typRepart,
                            :cdeCisac,
                            :cdeTer,
                            :rionEffet,
                            :cdeFamilTypUtil,
                            :numProg,
                            :cdeUtil,
                            :cdeTypUtil,
                            :cdeModFac,
                            :cdeTypProg,
                            :cdeCompl,
                            :libProg,
                            :datDbtProg,
                            :datFinProg,
                            :ide12,
                            :cdeTypIde12,
                            :datSitu,
                            :datConslt,
                            :durDif,
                            :nbrDif,
                            :typMt,
                            :mt,
                            :cdeTypDrtSacem,
                            :coadPayer,
                            :idSteAd,
                            :rolAd,
                            :cleAd,
                            :cdeTypProtec,
                            :coadOriEdtr,
                            :idSteOriEdtr,
                            :numPers,
                            :numCatal,
                            :points
                        )
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="typeRepartOeuvreADReader"
        class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="typeRepartOeuvreADQuery"/>
        <property name="pageSize" value="100"/>
        <property name="rowMapper" ref="lignePreprepFVRowMapper"/>
    </bean>

    <bean id="typeRepartOeuvreADQuery" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="databaseType" value="MySQL" />
        <property name="selectClause" value="SELECT PP.CDE_TER AS cdeTer, PP.RION_THEORIQUE as rionEffet, PP.CDEFAMILTYPUTIL as cdeFamilTypUtil,
                                           PP.NUMPROG AS numProg, LPFV.id as id, PP.cdeTypUtil, PP.NOM AS libProg,
                                           PP.DATE_DBT_PRG AS datDbtProg, PP.DATE_FIN_PRG AS datFinProg, LPFV.ide12,
                                           LPFV.cdeTypIde12, LPFV.datsitu, LPFV.datconslt,LPFV.durDif, LPFV.nbrDif,
                                           LPFV.typMt, LPFV.mt, PP.TYPE_DROIT as cdeTypDrtSacem, AD.COAD as coadPayer,
                                           AD.IDSTEAD as idSteAd, AD.ROLAD as rolAd, AD.CLEAD as cleAd, AD.CDETYPPROTEC as cdeTypProtec,
                                           AD.COADORIEDTR as coadOriEdtr, AD.IDSTEORIEDTR as idSteOriEdtr, AD.NUMPERS as numPers,
                                           AD.NUMCATAL as numCatal, AD.POINTS as points"/>
        <property name="fromClause" value="FROM  PRIAM_LIGNE_PROGRAMME_FV LPFV
                                            INNER JOIN PRIAM_FICHIER PF ON LPFV.ID_FICHIER = PF.ID
                                            INNER JOIN PRIAM_PROGRAMME PP ON PF.NUMPROG = PP.NUMPROG
                                            INNER JOIN PRIAM_AYANT_DROIT AD on LPFV.id = AD.ID_FV"/>
        <property name="whereClause" value="WHERE PP.NUMPROG='#{jobParameters[numProg]}' AND PP.STATUT_PROG_CODE = 'VALIDE' "/>
        <property name="groupClause" value="GROUP BY id, coadPayer, rolAd"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKeys" >
            <map>
                <entry key="id" value="ASCENDING"/>
                <entry key="coadPayer" value="ASCENDING"/>
                <entry key="rolAd" value="ASCENDING"/>
            </map>
        </property>
    </bean>

    <bean id="lignePreprepFVReader"
        class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="lignePreprepFVQuery"/>
        <property name="pageSize" value="100"/>
        <property name="rowMapper" ref="lignePreprepFVRowMapper"/>
    </bean>

    <bean id="lignePreprepFVQuery" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="databaseType" value="MySQL" />
        <property name="selectClause" value="SELECT LP.*"/>
        <property name="fromClause" value="FROM PRIAM_LIGNE_PREPREP_FV LP"/>
        <property name="whereClause" value="WHERE LP.numProg='#{jobParameters[numProg]}' "/>
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="sortKey" value="LP.id"/>-->
        <property name="sortKeys" >
            <map>
                <entry key="LP.typRepart" value="ASCENDING"/>
                <entry key="LP.numProg" value="ASCENDING"/>
                <entry key="LP.cdeCisac" value="ASCENDING"/>
                <entry key="LP.cdeTer" value="ASCENDING"/>
                <entry key="LP.rionEffet" value="ASCENDING"/>
                <entry key="LP.cdeFamilTypUtil" value="ASCENDING"/>
                <entry key="LP.cdeTypUtil" value="ASCENDING"/>
                <entry key="LP.cdeUtil" value="ASCENDING"/>
                <entry key="LP.cdeModFac" value="ASCENDING"/>
                <entry key="LP.cdeTypProg" value="ASCENDING"/>
                <entry key="LP.cdeCompl" value="ASCENDING"/>
                <entry key="LP.datDbtProg" value="ASCENDING"/>
                <entry key="LP.datFinProg" value="ASCENDING"/>
                <entry key="LP.id" value="ASCENDING"/>
            </map>
        </property>

    </bean>


    <bean id="programmeBatchDao" class="fr.sacem.priam.batch.common.dao.ProgrammeBatchDao" >
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
    </bean>

    <bean id="journalBatchDao" class="fr.sacem.priam.model.dao.jpa.JournalBatchDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="lignePreprepFVProcessor" class="fr.sacem.priam.batch.felix.processor.LignePreprepFVProcessor"/>

    <bean id="typeRepartProcessor" class="fr.sacem.priam.batch.felix.processor.TypeRepartProcessor"/>

    <bean id="generateFelixDataProcessor" class="fr.sacem.priam.batch.felix.processor.GenerateFelixDataItemProcessor"/>

    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository" p:taskExecutor-ref="taskExecutor"  />

   <bean id="taskExecutor"
        class="org.springframework.core.task.SimpleAsyncTaskExecutor" >
    </bean>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>



    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->


</beans>