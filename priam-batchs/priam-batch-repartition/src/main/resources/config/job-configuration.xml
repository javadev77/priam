<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <context:property-placeholder location="classpath:config/application-local.properties"/>
    <util:properties id="envProperties"
                     location="classpath:config/application-local.properties"/>
    <job id="csvArchiveFlatFileReaderJob" xmlns="http://www.springframework.org/schema/batch">

        <step id="csvArchiveFlatFileReaderStep" next="decisionMajReferentiel">
            <tasklet>
                <chunk
                        reader="readerPriamCsv"
                        writer="writerPriamCsv"
                        processor="repartitionItemProcessor"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>
        <decision id="decisionMajReferentiel" decider="decider">
            <next on="MAJ_REFERENTIEL" to="stepMajReferentiel" />
            <end on="COMPLETED"/>
        </decision>
        <step id="stepMajReferentiel">
            <tasklet>
                <chunk
                        reader="majReferentielReader"
                        processor="majReferentielProcessor"
                        writer="classifierReferencielItemWriter"
                        commit-interval="100">

                </chunk>
            </tasklet>
        </step>
        <listeners merge="true">
            <listener ref="listenerCompletition"/>
        </listeners>
    </job>


    <bean id="listenerCompletition" class="fr.sacem.priam.batch.repartition.listener.JobCompletionNotificationLigneProgrammeRepartitionListener"/>
    <!--<bean id="readerPriamCsv"
          class="fr.sacem.priam.batch.repartition.service.CsvMultiResourceItemReader" scope="step">
        <property name="delegate" ref="flatFileItemReader"/>
        <property name="strict" value="false"/>
    </bean>-->
    <bean id="readerPriamCsv"
          class="fr.sacem.priam.batch.common.reader.CsvMultiResourceItemReader" scope="step">
        <property name="delegate" ref="flatFileItemReader"/>
        <property name="strict" value="false"/>
    </bean>

    <bean id="writerPriamCsv" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                    UPDATE PRIAM_PROGRAMME
                    SET
                            NUMPROG=:numeroProgramme,
                            DATE_REPARTITION=:datcalc,
                            RION_PAIEMENT=:rion,
                            STATUT_PROG_CODE=:status
                    WHERE
                            NUMPROG=:numeroProgramme
                    AND
                            STATUT_PROG_CODE = 'MIS_EN_REPART'
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>
    <bean id="repartitionItemProcessor" class="fr.sacem.priam.batch.repartition.service.RepartitionItemProcessor"/>

    <bean id="flatFileItemReader"
          class="fr.sacem.priam.batch.repartition.mapper.CsvPriamFileItemReader">
        <property name="lineMapper">
            <bean class="fr.sacem.priam.batch.repartition.mapper.CsvPriamLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="numeroProgramme,datcalc,rion,status"/>
                        <property name="delimiter" value=";"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType" value="fr.sacem.priam.batch.common.domain.Repartition"/>
                        <property name="customEditors">
                            <map>
                                <entry key="java.time.LocalDateTime">
                                    <bean class="fr.sacem.priam.batch.common.util.DatePropertyEditor">
                                    </bean>
                                </entry>
                            </map>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="decider" class="fr.sacem.priam.batch.repartition.fv.decision.FlowDecision"/>

    <bean id="majReferentielReader"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="majReferentielQuery"/>
        <property name="pageSize" value="100"/>
        <property name="rowMapper" ref="referentielParticipationMapper"/>
    </bean>

    <bean id="majReferentielQuery" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="databaseType" value="MySQL" />
        <property name="selectClause" value="SELECT LPFV.ide12, LPFV.cdeTypUtil, LPFV.rionEffet"/>
        <property name="fromClause" value="FROM  PRIAM_LIGNE_PREPREP_FV LPFV"/>
        <property name="whereClause" value="WHERE LPFV.numProg='#{jobExecutionContext['numeroProgramme']}'"/>
        <property name="groupClause" value="LPFV.ide12"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="LPFV.ide12"/>
    </bean>

    <bean id="majReferentielProcessor" class="fr.sacem.priam.batch.repartition.service.MajReferentielProcessor"/>

    <bean id="classifierReferencielItemWriter" class="org.springframework.batch.item.support.ClassifierCompositeItemWriter" scope="step">
        <property name="classifier" ref="classifierReferenciel" />
    </bean>

    <bean id="classifierReferenciel"  class="org.springframework.classify.BackToBackPatternClassifier">
        <property name="routerDelegate">
            <bean class="fr.sacem.priam.batch.repartition.fv.writer.ReferentielWriterRouteImpl" />
        </property>
        <property name="matcherMap">
            <map>
                <entry key="INSERT" value-ref="insert_Writer" />
                <entry key="UPDATE" value-ref="update_Writer" />
            </map>
        </property>
    </bean>

    <bean id="insert_Writer" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO PRIAM_REFERENTIEL_PARTICIPATION_FDS (
                            ide12,
                            cdeTypUtil,
                            rionPaiementMax
                        )
                        VALUES (
                            :ide12,
                            :cdeTypUtil,
                            :rionPaiementMax
                        )
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="update_Writer" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                    UPDATE PRIAM_REFERENTIEL_PARTICIPATION_FDS
                    set rionPaiementMax =:rionPaiementMax
                    where ide12 =:ide12 and cdeTypUtil =:cdeTypUtil
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="referentielParticipationMapper" class="fr.sacem.priam.batch.repartition.fv.mapper.ReferentielParticipationMapper"/>

    <bean id="programmeBatchDao" class="fr.sacem.priam.batch.common.dao.ProgrammeBatchDao" >
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
    </bean>

    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository"/>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>