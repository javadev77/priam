<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="searchSystemEnvironment" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="location" value="classpath:config/application-${spring.profiles.active}.properties"/>
    </bean>


    <job id="jobGenerationREQ" xmlns="http://www.springframework.org/schema/batch">
        <step id="prepareAndGenerateREQ">
            <tasklet>
                <chunk
                        reader="readFromTableLigneProgrammeFV"
                        writer="writeReqFile"
                        commit-interval="100">
                </chunk>
            </tasklet>

            <listeners merge="true">
                <listener ref="stepListener"/>
            </listeners>
        </step>

        <listeners>
            <listener ref="jobCompletion"/>

        </listeners>

    </job>


    <bean id="jobCompletion" class="fr.sacem.priam.batch.fv.octav.req.listener.JobListener"/>

    <bean id="stepListener" class="fr.sacem.priam.batch.fv.octav.req.listener.FlagDemiInterfaceStepListener"/>

    <bean id="readFromTableLigneProgrammeFV"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="queryProvider"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="ligneProgFvMapper"/>
    </bean>

    <bean id="ligneProgFvMapper" class="fr.sacem.priam.batch.common.util.mapper.importPenef.PriamLigneProgrammeFVSQLMapper"/>

    <bean id="queryProvider" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT l.*"/>
        <property name="fromClause" value="from PRIAM_LIGNE_PROGRAMME_FV l
                                            INNER JOIN PRIAM_FICHIER f ON l.ID_FICHIER=f.ID"/>
        <property name="whereClause" value="WHERE f.ID='#{jobParameters[idFichier]}'"/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="l.id"/>
    </bean>



    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository"/>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


</beans>