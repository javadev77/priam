<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import  resource="job-desaffectation-fv.xml"/>
    <import resource="job-export-fv.xml"/>
    <import resource="job-service-import-fv.xml"/>

    <job id="jobAffectationFv" xmlns="http://www.springframework.org/schema/batch">

        <step id="desaffecterFvStep" next="aggregationFvOeuvre">

            <job ref="jobDesaffectationFV" job-launcher="jobLauncher2"/>

        </step>
        <step id="aggregationFvOeuvre">
            <tasklet>
                <chunk
                        reader="aggregationFvOeuvreReader"
                        writer="aggregationFvOeuvreWriter"
                        commit-interval="2000"
                        retry-limit="15">

                    <retryable-exception-classes>
                        <include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
                        <include class="org.springframework.dao.CannotAcquireLockException"/>
                    </retryable-exception-classes>
                </chunk>
            </tasklet>

            <listeners merge="true">
                <listener ref="listnerDeleteAfterDedoublonnage"/>
            </listeners>
        </step>

        <listeners merge="true">
            <listener ref="listenerCompletition"/>
        </listeners>


    </job>

    <bean id="listenerCompletition" class="fr.sacem.priam.batch.fv.affectation.listener.JobAffectationFVListener"/>

    <bean id="listnerDeleteAfterDedoublonnage" class="fr.sacem.priam.batch.fv.affectation.listener.ListnerDeleteAfterDedoublonnageFV"/>


    <bean id="aggregationFvOeuvreReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="queryProvider"/>
        <property name="pageSize" value="2000"/>
        <property name="rowMapper" ref="ligneProgrammeRowMapper"/>
    </bean>


    <bean id="queryProvider" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="databaseType" value="MySQL" />
        <property name="selectClause" value="select l.id,
                            l.id_fichier,
                            l.cdeCisac,
                            l.cdeFamilTypUtil,
                            l.numProg,
                            l.cdeUtil,
                            l.cdeTypUtil,
                           l.cdeGreDif,
                           l.cdeModDif,
                           l.cdeTypIde12,
                           l.ide12,
                           sum(l.durDif) durDif,
                           sum(l.nbrDif) nbrDif,
                           sum(l.mt) mt,
                           l.ctna,
                           l.paramCoefHor,
                           l.durDifCtna,
                           l.cdeLng,
                           l.indDoubSsTit,
                           l.tax,
                           l.typMt,
                           l.cdeGreIde12Cmplx,
                           l.cdeGreIde12,
                           l.titreOriCmplx,
                           l.titreAltPppalCmplx,
                           l.titreOriOeuvPereCmplx,
                           l.titreAltOeuvPereCmplx,
                           l.titreOeuvre,
                           l.cdePaysOriIso4NCmplx,
                           l.realisateurCmplx,
                           l.roleParticipant1,
                           l.nomParticipant1,
                           l.cdeTypUtilOri,
                           l.cdeFamilTypUtilOri,
                           l.libelleUtilisateur,
                           l.utilisateur,
                           l.date_insertion,
                           l.ajout,
                           l.selection "/>
        <property name="fromClause" value="FROM PRIAM_LIGNE_PROGRAMME_FV l
                                            INNER JOIN PRIAM_FICHIER f ON l.ID_FICHIER=f.ID
                                            INNER JOIN PRIAM_PROGRAMME p ON p.NUMPROG=f.NUMPROG"/>
        <property name="whereClause" value="WHERE p.NUMPROG='#{jobParameters[numProg]}'
                                              GROUP BY l.ide12
                                               "/>

        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="l.ide12"/>
    </bean>

    <bean id="ligneProgrammeRowMapper" class="fr.sacem.priam.batch.fv.affectation.mapper.LigneProgrammeFvMapper"/>

    <bean id="fichierBatchService" class="fr.sacem.priam.batch.common.service.importPenef.FichierBatchServiceImpl">
        <constructor-arg ref="fichierRepository"/>
    </bean>


    <bean id="fichierRepository" class="fr.sacem.priam.batch.common.dao.FichierRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableFichier" value="${nom.table.fichier}"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
        <property name="nomTableLigneProgrammeLog" value="${nom.table.fichierlog}"/>
        <property name="typeFichier" value="${type.fichier}"/>
    </bean>

    <bean id="aggregationFvOeuvreWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                       UPDATE PRIAM_LIGNE_PROGRAMME_FV l2
                       INNER JOIN PRIAM_FICHIER f2 on f2.ID=l2.ID_FICHIER
                       SET nbrDif = :nbrDif, nbrDifEdit = :nbrDif, mt =:mt, mtEdit =:mt
                       WHERE ide12 = :ide12 AND f2.NUMPROG = '#{jobParameters[numProg]}'
                    ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="ligneProgrammeBatchDao" class="fr.sacem.priam.batch.common.dao.LigneProgrammeBatchDao">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
    </bean>

    <bean id="programmeBatchDao" class="fr.sacem.priam.batch.common.dao.ProgrammeBatchDao">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableLigneProgramme" value="${nom.table.ligneprogramme}"/>
    </bean>


    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository" p:taskExecutor-ref="taskExecutor"  />

    <bean id="jobLauncher2" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
        p:jobRepository-ref="jobRepository" />


   <bean id="taskExecutor"
        class="org.springframework.core.task.SimpleAsyncTaskExecutor" >
    </bean>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>

</beans>