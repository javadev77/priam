<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="fr.sacem.priam.batch.sortie.catcms"/>
    <context:property-placeholder location="classpath:configuration/application-test.properties"/>
    <util:properties id="envProperties" location="classpath:configuration/application-test.properties"/>
    <import resource="classpath:configuration/job-database-test.xml"/>

    <job id="jobSortieCatalogue" xmlns="http://www.springframework.org/schema/batch">
        <step id="sortieCatalogueFr" next="sortieCatalogueAnf">
            <tasklet>
                <chunk
                        reader="readerPriamSortieCatalogueFr"
                        writer="writerPriamSortieCatalogue"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>
        <step id="sortieCatalogueAnf">
            <tasklet>
                <chunk
                        reader="readerPriamSortieCatalogueAnf"
                        writer="writerPriamSortieCatalogue"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>

    </job>

    <bean id="readerPriamSortieCatalogueFr"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="qpReaderPriamSortieCatalogueFr"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="catalogueCMSRowMapper"/>
    </bean>

    <bean id="qpReaderPriamSortieCatalogueFr" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT *"/>
        <property name="fromClause" value="FROM PRIAM_CATCMS_CATALOGUE"/>
        <property name="whereClause" value="(DATE_SORTIE IS NULL AND DATE_RENOUVELLEMENT IS NULL AND CURRENT_DATE() > DATEADD('YEAR', #{jobParameters['param.annee.fr']}, DATE_ENTREE))
                                            OR (DATE_SORTIE IS NULL AND DATE_RENOUVELLEMENT IS NOT NULL AND CURRENT_DATE() > DATEADD('YEAR', #{jobParameters['param.annee.fr']}, DATE_ENTREE))
                                            AND TYPE_CMS = 'FR'"/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="ID"/>
    </bean>

    <bean id="readerPriamSortieCatalogueAnf"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="qpReaderPriamSortieCatalogueAnf"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="catalogueCMSRowMapper"/>
    </bean>

    <bean id="qpReaderPriamSortieCatalogueAnf" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT *"/>
        <property name="fromClause" value="FROM PRIAM_CATCMS_CATALOGUE"/>
        <property name="whereClause" value="(DATE_SORTIE IS NULL AND DATE_RENOUVELLEMENT IS NULL AND CURRENT_DATE() > DATEADD('YEAR', #{jobParameters['param.annee.anf']}, DATE_ENTREE))
                                            OR (DATE_SORTIE IS NULL AND DATE_RENOUVELLEMENT IS NOT NULL AND CURRENT_DATE() > DATEADD('YEAR', #{jobParameters['param.annee.anf']}, DATE_ENTREE))
                                            AND TYPE_CMS = 'ANF'"/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="ID"/>
    </bean>

    <bean id="catalogueCMSRowMapper" class="fr.sacem.priam.batch.sortie.catcms.mapper.CatalogueCMSRowMapper"/>

    <bean id="writerPriamSortieCatalogue" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                    UPDATE PRIAM_CATCMS_CATALOGUE
                    SET DATE_SORTIE = CURRENT_DATE()
                    WHERE ID  = :id;
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository"/>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="catalogueCMSRepositoryForTest" class="fr.sacem.priam.batch.sortie.catcms.dao.CatalogueCMSRepositoryForTest">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jobLauncherTestUtils" class="org.springframework.batch.test.JobLauncherTestUtils"/>

</beans>