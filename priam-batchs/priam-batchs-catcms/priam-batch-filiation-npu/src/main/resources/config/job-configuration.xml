<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="searchSystemEnvironment" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="location" value="classpath:config/application-${spring.profiles.active}.properties"/>
    </bean>

    <job id="jobFiliationNPU" xmlns="http://www.springframework.org/schema/batch">

        <step id="majFlagCatalogueEtParticipant" next="csvArchiveFlatFileReaderStep">
            <tasklet>
                <chunk
                        reader="readerMajFlagCatalogueEtParticipant"
                        writer="compositeWriterMajFlagCatalogueEtParticipant"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>

        <step id="csvArchiveFlatFileReaderStep">
            <tasklet>
                <chunk
                        reader="readerPriamFiliationNpuCsv"
                        writer="compositeWriterPriamFiliationNPU"
                        processor="processorPriamFiliationNPU"
                        commit-interval="${commit-interval}">
                </chunk>
            </tasklet>
        </step>
        <listeners merge="true">
            <listener ref="jobCompletionFiliationNpuListener"/>
        </listeners>
    </job>

    <bean id="readerPriamFiliationNpuCsv"
          class="fr.sacem.priam.batch.common.reader.CsvMultiResourceItemReader" scope="step">
        <property name="delegate" ref="flatFileItemReader"/>
        <property name="strict" value="false"/>
    </bean>

    <bean id="flatFileItemReader"
          class="fr.sacem.priam.batch.filiation.npu.mapper.OeuvreFiliationNPUFileItemReader">
        <property name="lineMapper">
            <bean class="fr.sacem.priam.batch.filiation.npu.mapper.OeuvreFiliationNPULineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="ide12,ide12Rep,titreOriginal"/>
                        <property name="delimiter" value=";"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType" value="fr.sacem.priam.batch.filiation.npu.domain.OeuvreFiliationNPU"/>
                        <property name="customEditors">
                            <map>
                                <entry key="java.time.LocalDateTime">
                                    <bean class="fr.sacem.priam.batch.common.util.DatePropertyEditor">
                                    </bean>
                                </entry>
                            </map>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="processorPriamFiliationNPU" class="fr.sacem.priam.batch.filiation.npu.processor.OeuvreFiliationNPUProcessor">
    </bean>

    <bean id="compositeWriterPriamFiliationNPU" class="org.springframework.batch.item.support.CompositeItemWriter">
        <property name="delegates">
            <list>
                <!--<ref bean="writerPriamFiliationNpuCsv" />
                <ref bean="writerPriamFiliationNpuParticipantsCsv" />-->
                <ref bean="writerPriamFiliationNpuCsv" />
                <ref bean="writerPriamFiliationNpuParticipantsCsv" />

            </list>
        </property>
    </bean>

    <bean id="writerPriamFiliationNpuCsv" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
    <property name="dataSource" ref="dataSource"/>
    <property name="assertUpdates" value="false"/>
    <property name="sql">
        <value>
            <![CDATA[
                    UPDATE PRIAM_CATCMS_CATALOGUE
                    SET IDE12 = :ide12Rep, TITRE = :titreOriginal
                    WHERE IDE12  = :ide12 AND (DATE_SORTIE IS NULL OR DATE_SORTIE = CURRENT_DATE);
                ]]>
        </value>
    </property>
    <property name="itemSqlParameterSourceProvider">
        <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
    </property>
    </bean>

    <bean id="writerPriamFiliationNpuParticipantsCsv" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                    UPDATE PRIAM_CATCMS_PARTICIPANTS
                    SET IDE12 = :ide12Rep
                    WHERE IDE12 =:ide12 AND OEUVRE_SORTIE = 0;
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <!--<bean id="writerPriamFiliationNpuParticipantsCsv" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                    UPDATE PRIAM_CATCMS_PARTICIPANTS
                    SET IDE12 = :ide12Rep
                    WHERE ID_CATALOGUE IN (SELECT P.ID_CATALOGUE
                                FROM (SELECT * FROM PRIAM_CATCMS_PARTICIPANTS) P INNER JOIN PRIAM_CATCMS_CATALOGUE C ON P.ID_CATALOGUE = C.ID
                                WHERE P.IDE12 =:ide12 AND (C.DATE_SORTIE IS NULL OR C.DATE_SORTIE = CURRENT_DATE()));
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>-->

    <bean id="readerMajFlagCatalogueEtParticipant"
          class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider" ref="qpReaderMajFlagCatalogueEtParticipant"/>
        <property name="pageSize" value="${commit-interval}"/>
        <property name="rowMapper" ref="catalogueCMSRowMapper"/>
    </bean>

    <!--<bean id="qpReaderMajFlagCatalogueEtParticipant" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT ID, IDE12, TYPE_CMS"/>
        <property name="fromClause" value="FROM PRIAM_CATCMS_CATALOGUE"/>
        <property name="whereClause" value="WHERE DATE_SORTIE &lt;= date_add(current_date,INTERVAL -1 DAY) AND ELIGIBLE_CREATION = 0"/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="ID"/>
    </bean>-->

    <!--<bean id="qpReaderMajFlagCatalogueEtParticipant" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT MAX(ID) AS ID, TYPE_CMS, IDE12, MAX(DATE_SORTIE) AS DATE_SORTIE"/>
        <property name="fromClause" value="FROM PRIAM_CATCMS_CATALOGUE"/>
        <property name="whereClause" value="WHERE (TYPE_CMS, IDE12) NOT IN (SELECT TYPE_CMS, IDE12 FROM PRIAM_CATCMS_CATALOGUE WHERE DATE_SORTIE IS NULL)
                                            AND DATE_SORTIE &lt;= date_add(current_date,INTERVAL -1 DAY) and ELIGIBLE_CREATION = 0"/>
        <property name="groupClause" value="GROUP BY TYPE_CMS"/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKeys">
            <map>
                <entry key="ID" value="ASCENDING"/>
                <entry key="DATE_SORTIE" value="DESCENDING"/>
            </map>
        </property>
    </bean>-->

    <bean id="qpReaderMajFlagCatalogueEtParticipant" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean" scope="step">
        <property name="selectClause" value="SELECT CATALOGUE.ID, CATALOGUE.TYPE_CMS, CATALOGUE.IDE12, CATALOGUE.DATE_SORTIE"/>
        <property name="fromClause" value="FROM PRIAM_CATCMS_CATALOGUE CATALOGUE INNER JOIN
                                    (SELECT ID, TYPE_CMS, IDE12, MAX(DATE_SORTIE) AS DATE_SORTIE
                                    FROM PRIAM_CATCMS_CATALOGUE
                                    WHERE (TYPE_CMS, IDE12) NOT IN (SELECT TYPE_CMS, IDE12 FROM PRIAM_CATCMS_CATALOGUE WHERE DATE_SORTIE IS NULL)
                                         AND DATE_SORTIE &lt;= date_add(current_date,INTERVAL -1 DAY) AND ELIGIBLE_CREATION = 0 GROUP BY TYPE_CMS) REQUETE
                                    ON REQUETE.TYPE_CMS = CATALOGUE.TYPE_CMS AND REQUETE.IDE12 = CATALOGUE.IDE12 AND REQUETE.DATE_SORTIE = CATALOGUE.DATE_SORTIE"/>
        <property name="databaseType" value="MySQL" />
        <property name="dataSource" ref="dataSource"/>
        <property name="sortKey" value="CATALOGUE.ID"/>


    </bean>

    <bean id="catalogueCMSRowMapper" class="fr.sacem.priam.batch.filiation.npu.mapper.CatalogueCMSRowMapper"/>

    <bean id="compositeWriterMajFlagCatalogueEtParticipant" class="org.springframework.batch.item.support.CompositeItemWriter">
        <property name="delegates">
            <list>
                <ref bean="writerMajFlagCatalogue" />
                <ref bean="writerMajFlagParticipant" />
            </list>
        </property>
    </bean>

    <bean id="writerMajFlagCatalogue" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                    UPDATE PRIAM_CATCMS_CATALOGUE
                    SET ELIGIBLE_CREATION = 1
                    WHERE ID  = :id
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="writerMajFlagParticipant" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                    UPDATE PRIAM_CATCMS_PARTICIPANTS SET OEUVRE_SORTIE = 1
                    WHERE IDE12  = :ide12
                    AND TYPE_CMS =:typeCMS
                    AND OEUVRE_SORTIE = 0;
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <!--<bean id="writerJournalCatcmsSortieNPU" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                   INSERT INTO PRIAM_CATCMS_JOURNAL (
                    EVENEMENT,
                    IDE12,
                    DATE,
                    UTILISATEUR,
                    TYPE_CMS
                   )
                   VALUES (
                    'Sortie NPU',
                    :ide12,
                    CURRENT_TIMESTAMP(),
                    'Batch NPU',
                    :typeCMS
                   )
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="writerJournalCatcmsCreationNPU" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="assertUpdates" value="false"/>
        <property name="sql">
            <value>
                <![CDATA[
                   INSERT INTO PRIAM_CATCMS_JOURNAL (
                    EVENEMENT,
                    IDE12,
                    DATE,
                    UTILISATEUR,
                    TYPE_CMS
                   )
                   VALUES (
                    'Création NPU',
                    :ide12Rep,
                    CURRENT_TIMESTAMP(),
                    'Batch NPU',
                    :typeCMS
                   )
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>-->

    <!--<bean id="jobCompletionFiliationNpuListener" class="fr.sacem.priam.batch.filiation.npu.listener.JobCompletionFiliationNpuListener"></bean>-->
    <bean id="jobCompletionFiliationNpuListener" class="fr.sacem.priam.batch.common.listener.JobCompletionListener"></bean>

    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator"
          p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
          p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
          p:dataSource-ref="dataSource"/>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
          p:jobRegistry-ref="jobRegistry"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository"/>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="dataSource"
          p:transactionManager-ref="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="utilFile" class="fr.sacem.priam.batch.common.util.UtilFile" scope="prototype">
        <property name="fichierBatchService" ref="fichierBatchService"/>
    </bean>

    <bean id="fichierBatchService" class="fr.sacem.priam.batch.common.service.importPenef.FichierBatchServiceImpl">
        <constructor-arg ref="fichierRepository"/>
    </bean>

    <bean id="fichierRepository" class="fr.sacem.priam.batch.common.dao.FichierCatcmsRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="nomTableFichier" value="${nom.table.fichier}"/>
    </bean>

    <bean id="journalCatcmsRepository" class="fr.sacem.priam.batch.filiation.npu.dao.JournalCatcmsRepository">
        <property name="dataSource" ref="dataSource"/>
    </bean>



</beans>